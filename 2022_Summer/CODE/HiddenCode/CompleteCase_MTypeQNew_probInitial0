{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CompleteCase_MTypeQNew_probInitial0","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNE8TUIN/IhSJT8rZrNogGS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"2q4HuBPEslX4","executionInfo":{"status":"ok","timestamp":1652880530558,"user_tz":300,"elapsed":2,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"outputs":[],"source":["import numpy as np\n","\n","dim_ostate = 4*4*4 # ni * nj * population\n","dim_action = 3\n","dim_observe = 4 # income\n","\n","theta1 = [4.272,-0.594,-3.801, -0.356, -0.237,0.004, -0.03, 33.976,#0.005,  0.01,\n","          3.109,-0.754,-1.377,  -2, -0.241,-0.088, -0.171, 13.114]#,0    ,0.01]\n","#theta21 = 0.95\n","#theta23 = [0.95,0.01] + [0.42,0.01] + [0.02,0.45]\n","\n","a_old = np.arange(dim_action,dtype = int)\n","z_old = np.arange(dim_observe,dtype = int)\n","os_old = np.arange(dim_ostate,dtype = int)\n","\n","ni_old = os_old//16\n","nj_old = os_old//4%4\n","pop_old = os_old%4%4 #pop_old+n2_old*4+n1_old*16"]},{"cell_type":"markdown","metadata":{"id":"F8ljIXuXK5g9"},"source":["# 0.1Upload and Handle Data"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18643,"status":"ok","timestamp":1652880549376,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"},"user_tz":300},"id":"pTvmOgtuOaEa","outputId":"30377a22-c93f-4f7c-e853-77454a82aa58"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pickle\n","file_name = '/content/drive/MyDrive/2022_SUMMER/Research_Burger/CODE/TranslatePythonCode/'\n","with open(file_name + 'Q_new.txt','rb') as fp:\n","  mtype_prob = pickle.load(fp)\n","# mtype_int = -1*np.ones(400,dtype = int)\n","# for i in range(400):\n","#   mtype_max = max(mtype_prob[i])\n","#   if mtype_max >1/3:\n","#     mtype_int[i] = np.where(mtype_prob[i] == mtype_max)[0][0] +1\n","# print(np.sum(mtype_int==-1),np.sum(mtype_int==1),np.sum(mtype_int==2),np.sum(mtype_int==3))"],"metadata":{"id":"mhgsK_1RtbAC","executionInfo":{"status":"ok","timestamp":1652880551020,"user_tz":300,"elapsed":1648,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def quantile(x,p,method=1):\n","\n","  x = np.sort(x)\n","  n = len(x)\n","  if method == 3:\n","    qq = x[int(np.ceil(np.min(np.max(1,p*n),n)))-1]\n","  else:                         \n","    x = np.hstack([x[0], x,x[-1]])\n","    if method == 2:\n","        i = p*(n+1)+1\n","    else:\n","        i = p*n+1.5\n","    iu = int(np.ceil(i))\n","    il = int(np.floor(i))\n","    d = i-il\n","    qq = x[il-1]*(1-d)+x[iu-1]*d\n","  q = qq\n","  return q\n","\n","import scipy.io\n","mat = scipy.io.loadmat(file_name + 'canadafastfood_resorted.mat')\n","data = mat['data']\n","\n","#% Labeling\n","MT = len(data)          #% Size of the dataset (M x T = 400 x 35 = 14000).#clusterid = np.int_(data[:,0])      % Unique market ID.\n","market = np.int_(data[:,0])-1\n","year = np.int_(data[:,1])\n","N_aw  = np.int_(data[:,2])\n","N_bk  = np.int_(data[:,3])\n","N_hvy = np.int_(data[:,4])\n","N_mcd = np.int_(data[:,5])\n","N_wdy = np.int_(data[:,6])\n","#lagN_aw  = np.int_(data[:,7])lagN_bk  = np.int_(data[:,8])lagN_hvy = np.int_(data[:,9])lagN_mcd = np.int_(data[:,10])lagN_wdy = np.int_(data[:,11])\n","fwdN_aw  = np.int_(data[:,12])\n","fwdN_bk  = np.int_(data[:,13])\n","fwdN_hvy = np.int_(data[:,14])\n","fwdN_mcd = np.int_(data[:,15])\n","fwdN_wdy = np.int_(data[:,16])\n","a_aw  = np.int_(data[:,17])\n","a_bk  = np.int_(data[:,18])\n","a_hvy = np.int_(data[:,19])\n","a_mcd = np.int_(data[:,20])\n","a_wdy = np.int_(data[:,21])\n","pop = data[:,23]#val = data[:,24]\n","inc = data[:,25]\n","fpop = data[:,27]\n","finc = data[:,28]#fval = data[:,29]\n","#mktfe = data[:,30]         #% Market fixed effect estimates (from 130913_alaToivanenWaterson3_Fixedeffect3quantile.csv/dta)\n","#tertile = np.int_(data[:,31])       #% Market type initial guess (from 130913_alaToivanenWaterson3_Fixedeffect3quantile.csv/dta)\n","#tertile = np.kron(np.ones(35),mtype_int)\n","\n","#% Number of own shops (in state space; capped at 3), from the perspective of each firm\n","Ni_aw = (N_aw <= 3)*N_aw + (N_aw > 3)*3\n","Ni_bk = (N_bk <= 3)*N_bk + (N_bk > 3)*3\n","Ni_hvy = (N_hvy <= 3)*N_hvy + (N_hvy > 3)*3\n","Ni_mcd = (N_mcd <= 3)*N_mcd + (N_mcd > 3)*3\n","Ni_wdy = (N_wdy <= 3)*N_wdy + (N_wdy > 3)*3\n","Ni_faw = (fwdN_aw <= 3)*fwdN_aw + (fwdN_aw > 3)*3\n","Ni_fbk = (fwdN_bk <= 3)*fwdN_bk + (fwdN_bk > 3)*3\n","Ni_fhvy = (fwdN_hvy <= 3)*fwdN_hvy + (fwdN_hvy > 3)*3\n","Ni_fmcd = (fwdN_mcd <= 3)*fwdN_mcd + (fwdN_mcd > 3)*3\n","Ni_fwdy = (fwdN_wdy <= 3)*fwdN_wdy + (fwdN_wdy > 3)*3\n","#% Number of rival shops (in state space; capped at 3), from the perspective of each firm\n","Nj_aw = N_bk + N_hvy + N_mcd + N_wdy\n","Nj_bk = N_aw + N_hvy + N_mcd + N_wdy\n","Nj_hvy = N_aw + N_bk + N_mcd + N_wdy\n","Nj_mcd = N_aw + N_bk + N_hvy + N_wdy\n","Nj_wdy = N_aw + N_bk + N_hvy + N_mcd\n","\n","Nj_aw = (Nj_aw <= 3)*Nj_aw + (Nj_aw > 3)*3     \n","Nj_bk = (Nj_bk <= 3)*Nj_bk + (Nj_bk > 3)*3\n","Nj_hvy = (Nj_hvy <= 3)*Nj_hvy + (Nj_hvy > 3)*3\n","Nj_mcd = (Nj_mcd <= 3)*Nj_mcd + (Nj_mcd > 3)*3\n","Nj_wdy = (Nj_wdy <= 3)*Nj_wdy + (Nj_wdy > 3)*3\n","\n","Nj_faw = fwdN_bk + fwdN_hvy + fwdN_mcd + fwdN_wdy\n","Nj_fbk = fwdN_aw + fwdN_hvy + fwdN_mcd + fwdN_wdy\n","Nj_fhvy = fwdN_aw + fwdN_bk + fwdN_mcd + fwdN_wdy\n","Nj_fmcd = fwdN_aw + fwdN_bk + fwdN_hvy + fwdN_wdy\n","Nj_fwdy = fwdN_aw + fwdN_bk + fwdN_hvy + fwdN_mcd\n","\n","Nj_faw = (Nj_faw <= 3)*Nj_faw + (Nj_faw > 3)*3     \n","Nj_fbk = (Nj_fbk <= 3)*Nj_fbk + (Nj_fbk > 3)*3\n","Nj_fhvy = (Nj_fhvy <= 3)*Nj_fhvy + (Nj_fhvy > 3)*3\n","Nj_fmcd = (Nj_fmcd <= 3)*Nj_fmcd + (Nj_fmcd > 3)*3\n","Nj_fwdy = (Nj_fwdy <= 3)*Nj_fwdy + (Nj_fwdy > 3)*3\n","#% Obtain 4 quantiles for main market characteristics.\n","pop25 = quantile(pop,0.25)   \n","inc25 = quantile(inc,0.25)  \n","pop50 = quantile(pop,0.5)  \n","inc50 = quantile(inc,0.5)  \n","pop75 = quantile(pop,0.75)   \n","inc75 = quantile(inc,0.75)   \n","\n","disc_pop = np.int_(pop > pop25) + np.int_(pop > pop50) + np.int_(pop > pop75)  \n","disc_inc = np.int_(inc > inc25) + np.int_( inc > inc50) + np.int_(inc > inc75)\n","disc_fpop = np.int_(fpop > pop25) + np.int_(fpop > pop50) +  np.int_(fpop > pop75) \n","disc_finc = np.int_(finc > inc25) + np.int_( finc > inc50) + np.int_(finc > inc75) \n","\n","# #% Define state variables for each firm\n","# RHS_aw = np.vstack([Ni_aw, Nj_aw, disc_pop, disc_inc]).T#;         % State for A & W.      \n","# RHS_bk = np.vstack([Ni_bk, Nj_bk, disc_pop, disc_inc]).T#;         % State for Burger King.      \n","# RHS_hvy = np.vstack([Ni_hvy, Nj_hvy, disc_pop, disc_inc]).T#;      % State for Harvey's.      \n","# RHS_mcd = np.vstack([Ni_mcd, Nj_mcd, disc_pop, disc_inc]).T#;      % State for McDonald's.      \n","# RHS_wdy =np.vstack( [Ni_wdy, Nj_wdy, disc_pop, disc_inc]).T#;      % State for Wendy's.      "],"metadata":{"id":"R6n3XxjnuLG-","executionInfo":{"status":"ok","timestamp":1652880551674,"user_tz":300,"elapsed":656,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1652880551675,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"},"user_tz":300},"id":"KE3HJai9NGX-","outputId":"bc3328e1-7461-4d25-a27a-3279c4b38f0c"},"outputs":[{"output_type":"stream","name":"stdout","text":["################################population#######################################\n","3400&100&0&0\\\\\n","0&3344&157&0\\\\\n","0&1&3351&148\\\\\n","0&0&5&3494\\\\\n","Unstable term:411 (2.94%)\n","0.971 0.029 0.000 0.000\n","0.000 0.955 0.045 0.000\n","0.000 0.000 0.957 0.042\n","0.000 0.000 0.001 0.999\n","################################income#######################################\n","3172&328&0&0\\\\\n","44&3047&411&0\\\\\n","0&72&3133&294\\\\\n","0&0&50&3449\\\\\n","Unstable term:1199 (8.56%)\n","0.906 0.094 0.000 0.000\n","0.013 0.870 0.117 0.000\n","0.000 0.021 0.895 0.084\n","0.000 0.000 0.014 0.986\n"]}],"source":["def PrintLatex(matrixs):\n","  for i in range(len(matrixs)):\n","    print('{}&{}&{}&{}\\\\\\\\'.format(matrixs[i][0],matrixs[i][1],matrixs[i][2],matrixs[i][3]))\n","N_obser = 400*35\n","dim_obser = 4\n","print('################################{}#######################################'.format('population'))\n","fs1, bs1 = (disc_fpop.reshape([35,-1]).T).reshape(-1),(disc_pop.reshape([35,-1]).T).reshape(-1)\n","tran1 = np.zeros([dim_obser,dim_obser],dtype=int)\n","for i in range(len(fs1)):\n","  tran1[bs1[i],fs1[i]] +=1\n","PrintLatex(tran1)\n","print('Unstable term:{} ({:.2f}%)'.format(N_obser-np.sum([tran1[i][i] for i in range(dim_obser)]),\n","                                    (N_obser-np.sum([tran1[i][i] for i in range(dim_obser)]))/N_obser*100) )\n","haha = tran1/np.sum(tran1,axis=1).reshape([dim_obser,1]).dot(np.ones([1,dim_obser]))\n","\n","for i in range(len(haha)):\n","  print('{:.3f} {:.3f} {:.3f} {:.3f}'.format(haha[i,0],haha[i,1],haha[i,2],haha[i,3]))\n","print('################################{}#######################################'.format('income'))\n","fs2, bs2 = (disc_finc.reshape([35,-1]).T).reshape(-1),(disc_inc.reshape([35,-1]).T).reshape(-1)\n","tran2 = np.zeros([dim_obser,dim_obser],dtype=int)\n","for i in range(len(fs2)):\n","  tran2[bs2[i],fs2[i]] +=1\n","PrintLatex(tran2)\n","print('Unstable term:{} ({:.2f}%)'.format(N_obser-np.sum([tran2[i][i] for i in range(dim_obser)]),\n","                                    (N_obser-np.sum([tran2[i][i] for i in range(dim_obser)]))/N_obser*100) )\n","haha2 = tran2/np.sum(tran2,axis=1).reshape([dim_obser,1]).dot(np.ones([1,dim_obser]))\n","\n","for i in range(len(haha2)):\n","  print('{:.3f} {:.3f} {:.3f} {:.3f}'.format(haha2[i,0],haha2[i,1],haha2[i,2],haha2[i,3]))"]},{"cell_type":"code","source":["import itertools\n","dim_action = 3\n","\n","fni_mcd,bni_mcd = (Ni_fmcd.reshape([35,-1]).T).reshape(-1),(Ni_mcd.reshape([35,-1]).T).reshape(-1)\n","fni_aw,bni_aw= (Ni_faw.reshape([35,-1]).T).reshape(-1),(Ni_aw.reshape([35,-1]).T).reshape(-1)\n","fni_bk,bni_bk= (Ni_fbk.reshape([35,-1]).T).reshape(-1),(Ni_bk.reshape([35,-1]).T).reshape(-1)\n","fni_harv,bni_harv =(Ni_fhvy.reshape([35,-1]).T).reshape(-1),(Ni_hvy.reshape([35,-1]).T).reshape(-1)\n","fni_wend,bni_wend = (Ni_fwdy.reshape([35,-1]).T).reshape(-1),(Ni_wdy.reshape([35,-1]).T).reshape(-1)\n","fni = [fni_mcd,fni_aw,fni_bk,fni_harv,fni_wend]\n","bni = [bni_mcd,bni_aw,bni_bk,bni_harv,bni_wend]\n","\n","\n","fnj_mcd,bnj_mcd = (Nj_fmcd.reshape([35,-1]).T).reshape(-1),(Nj_mcd.reshape([35,-1]).T).reshape(-1)\n","fnj_aw,bnj_aw= (Nj_faw.reshape([35,-1]).T).reshape(-1),(Nj_aw.reshape([35,-1]).T).reshape(-1)\n","fnj_bk,bnj_bk= (Nj_fbk.reshape([35,-1]).T).reshape(-1),(Nj_bk.reshape([35,-1]).T).reshape(-1)\n","fnj_harv,bnj_harv = (Nj_fhvy.reshape([35,-1]).T).reshape(-1),(Nj_hvy.reshape([35,-1]).T).reshape(-1)\n","fnj_wend,bnj_wend = (Nj_fwdy.reshape([35,-1]).T).reshape(-1),(Nj_wdy.reshape([35,-1]).T).reshape(-1)\n"],"metadata":{"id":"g9QRpVpC9uxe","executionInfo":{"status":"ok","timestamp":1652880551675,"user_tz":300,"elapsed":2,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def GenerateAi(ai):\n","  ai_disc = np.int_(ai>0) - np.int_(ai<0)\n","  ai_disc = (ai_disc.reshape([35,-1]).T).reshape(-1)\n","  return ai_disc + 1\n","\n","ai_mcd = GenerateAi(a_mcd)\n","ai_aw = GenerateAi(a_aw)\n","ai_bk = GenerateAi(a_bk)\n","ai_harv = GenerateAi(a_hvy)\n","ai_wend = GenerateAi(a_wdy)\n","ai = [ai_mcd,ai_aw,ai_bk,ai_harv,ai_wend]\n","\n","obser = []\n","for j in range(5):\n","  print('################################agent {}#######################################'.format(j+1))\n","  obser_temp = np.zeros([dim_action,dim_obser,dim_obser],dtype=int)\n","  for i in range(len(fni[j])):\n","    obser_temp[ai[j][i],bni[j][i],fni[j][i]] +=1\n","  for i in range(dim_action):\n","    res = obser_temp[i]\n","    print('action:',i-1)\n","    PrintLatex(obser_temp[i])\n","  res = 0\n","  for a, z, z_prime in itertools.product(range(dim_action),range(dim_obser),range(dim_obser)):\n","      if z_prime == z + a-1:\n","        res += obser_temp[a,z,z_prime]\n","      elif z+a-1> dim_obser-1:\n","        res += obser_temp[a,z,-1]\n","      elif z+a-1<0:\n","        res += obser_temp[a,z,0]\n","  print('Stable term:{} ({:.2f}%)'.format(res, res/N_obser*100) )\n","  print(obser_temp/np.sum(obser_temp,axis=2).reshape([dim_action,dim_obser,1]).dot(np.ones([1,dim_obser])))\n","  obser.append(obser_temp)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nq8Trwm-APLj","executionInfo":{"status":"ok","timestamp":1652880552051,"user_tz":300,"elapsed":186,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}},"outputId":"593ecd81-6684-475b-e6e8-20285749857e"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["################################agent 1#######################################\n","action: -1\n","0&0&0&0\\\\\n","0&0&0&0\\\\\n","0&0&0&0\\\\\n","0&0&0&0\\\\\n","action: 0\n","8948&0&0&0\\\\\n","0&3906&0&0\\\\\n","0&0&643&0\\\\\n","0&0&0&141\\\\\n","action: 1\n","0&261&3&1\\\\\n","0&0&74&4\\\\\n","0&0&0&13\\\\\n","0&0&0&6\\\\\n","Stable term:14010 (100.07%)\n","[[[       nan        nan        nan        nan]\n","  [       nan        nan        nan        nan]\n","  [       nan        nan        nan        nan]\n","  [       nan        nan        nan        nan]]\n","\n"," [[1.         0.         0.         0.        ]\n","  [0.         1.         0.         0.        ]\n","  [0.         0.         1.         0.        ]\n","  [0.         0.         0.         1.        ]]\n","\n"," [[0.         0.98490566 0.01132075 0.00377358]\n","  [0.         0.         0.94871795 0.05128205]\n","  [0.         0.         0.         1.        ]\n","  [0.         0.         0.         1.        ]]]\n","################################agent 2#######################################\n","action: -1\n","0&0&0&0\\\\\n","78&0&0&0\\\\\n","2&15&0&0\\\\\n","0&0&1&0\\\\\n","action: 0\n","11504&0&0&0\\\\\n","0&1986&0&0\\\\\n","0&0&195&0\\\\\n","0&0&0&32\\\\\n","action: 1\n","0&151&1&0\\\\\n","0&0&31&1\\\\\n","0&0&0&2\\\\\n","0&0&0&1\\\\\n","Stable term:13999 (99.99%)\n","[[[       nan        nan        nan        nan]\n","  [1.         0.         0.         0.        ]\n","  [0.11764706 0.88235294 0.         0.        ]\n","  [0.         0.         1.         0.        ]]\n","\n"," [[1.         0.         0.         0.        ]\n","  [0.         1.         0.         0.        ]\n","  [0.         0.         1.         0.        ]\n","  [0.         0.         0.         1.        ]]\n","\n"," [[0.         0.99342105 0.00657895 0.        ]\n","  [0.         0.         0.96875    0.03125   ]\n","  [0.         0.         0.         1.        ]\n","  [0.         0.         0.         1.        ]]]\n","################################agent 3#######################################\n","action: -1\n","0&0&0&0\\\\\n","34&0&0&0\\\\\n","0&2&0&0\\\\\n","0&0&0&0\\\\\n","action: 0\n","12747&0&0&0\\\\\n","0&1092&0&0\\\\\n","0&0&16&0\\\\\n","0&0&0&7\\\\\n","action: 1\n","0&97&0&0\\\\\n","0&0&4&0\\\\\n","0&0&0&1\\\\\n","0&0&0&0\\\\\n","Stable term:14000 (100.00%)\n","[[[nan nan nan nan]\n","  [ 1.  0.  0.  0.]\n","  [ 0.  1.  0.  0.]\n","  [nan nan nan nan]]\n","\n"," [[ 1.  0.  0.  0.]\n","  [ 0.  1.  0.  0.]\n","  [ 0.  0.  1.  0.]\n","  [ 0.  0.  0.  1.]]\n","\n"," [[ 0.  1.  0.  0.]\n","  [ 0.  0.  1.  0.]\n","  [ 0.  0.  0.  1.]\n","  [nan nan nan nan]]]\n","################################agent 4#######################################\n","action: -1\n","0&0&0&0\\\\\n","52&0&0&0\\\\\n","0&7&0&0\\\\\n","0&0&0&0\\\\\n","action: 0\n","12054&0&0&0\\\\\n","0&1696&0&0\\\\\n","0&0&78&0\\\\\n","0&0&0&0\\\\\n","action: 1\n","0&97&1&0\\\\\n","0&0&15&0\\\\\n","0&0&0&0\\\\\n","0&0&0&0\\\\\n","Stable term:13999 (99.99%)\n","[[[       nan        nan        nan        nan]\n","  [1.         0.         0.         0.        ]\n","  [0.         1.         0.         0.        ]\n","  [       nan        nan        nan        nan]]\n","\n"," [[1.         0.         0.         0.        ]\n","  [0.         1.         0.         0.        ]\n","  [0.         0.         1.         0.        ]\n","  [       nan        nan        nan        nan]]\n","\n"," [[0.         0.98979592 0.01020408 0.        ]\n","  [0.         0.         1.         0.        ]\n","  [       nan        nan        nan        nan]\n","  [       nan        nan        nan        nan]]]\n","################################agent 5#######################################\n","action: -1\n","0&0&0&0\\\\\n","12&0&0&0\\\\\n","0&1&0&0\\\\\n","0&0&0&0\\\\\n","action: 0\n","12908&0&0&0\\\\\n","0&966&0&0\\\\\n","0&0&21&0\\\\\n","0&0&0&0\\\\\n","action: 1\n","0&89&0&0\\\\\n","0&0&3&0\\\\\n","0&0&0&0\\\\\n","0&0&0&0\\\\\n","Stable term:14000 (100.00%)\n","[[[nan nan nan nan]\n","  [ 1.  0.  0.  0.]\n","  [ 0.  1.  0.  0.]\n","  [nan nan nan nan]]\n","\n"," [[ 1.  0.  0.  0.]\n","  [ 0.  1.  0.  0.]\n","  [ 0.  0.  1.  0.]\n","  [nan nan nan nan]]\n","\n"," [[ 0.  1.  0.  0.]\n","  [ 0.  0.  1.  0.]\n","  [nan nan nan nan]\n","  [nan nan nan nan]]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:32: RuntimeWarning: invalid value encountered in true_divide\n"]}]},{"cell_type":"code","execution_count":8,"metadata":{"id":"l-L8Z7p6GJok","executionInfo":{"status":"ok","timestamp":1652880552451,"user_tz":300,"elapsed":401,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"outputs":[],"source":["import pandas as pd\n","sample_id = (market.reshape([35,-1]).T).reshape(-1)\n","time_year = (year.reshape([35,-1]).T).reshape(-1)\n","dataFull = pd.DataFrame()\n","dataFull['sample_id'] = sample_id\n","dataFull['time_year'] = time_year\n","\n","dataFull['fni_mcd'] = fni_mcd\n","dataFull['fni_aw'] = fni_aw\n","dataFull['fni_bk'] = fni_bk\n","dataFull['fni_harv'] = fni_harv\n","dataFull['fni_wend'] = fni_wend\n","dataFull['bni_mcd'] = bni_mcd\n","dataFull['bni_aw'] = bni_aw\n","dataFull['bni_bk'] = bni_bk\n","dataFull['bni_harv'] = bni_harv\n","dataFull['bni_wend'] = bni_wend\n","\n","dataFull['fnj_mcd'] = fnj_mcd\n","dataFull['fnj_aw'] = fnj_aw\n","dataFull['fnj_bk'] = fnj_bk\n","dataFull['fnj_harv'] = fnj_harv\n","dataFull['fnj_wend'] = fnj_wend\n","dataFull['bnj_mcd'] = bnj_mcd\n","dataFull['bnj_aw'] = bnj_aw\n","dataFull['bnj_bk'] = bnj_bk\n","dataFull['bnj_harv'] = bnj_harv\n","dataFull['bnj_wend'] = bnj_wend\n","\n","dataFull['ai_mcd'] = ai_mcd\n","dataFull['ai_aw'] = ai_aw\n","dataFull['ai_bk'] = ai_bk\n","dataFull['ai_harv'] = ai_harv\n","dataFull['ai_wend'] = ai_wend\n","\n","dataFull['fs1'] = fs1\n","dataFull['bs1'] = bs1\n","dataFull['fs2'] = fs2\n","dataFull['bs2'] = bs2\n"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1652880552453,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"},"user_tz":300},"id":"s-q9GAkp5DR1","outputId":"dd0d1ae9-ec05-4cbf-f083-47f08ac8f1b8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       sample_id  time_year  fni_mcd  fni_aw  fni_bk  fni_harv  fni_wend  \\\n","0              0       1970        0       0       0         0         0   \n","1              0       1971        0       0       0         0         0   \n","2              0       1972        0       0       0         0         0   \n","3              0       1973        0       0       0         0         0   \n","4              0       1974        0       0       0         0         0   \n","...          ...        ...      ...     ...     ...       ...       ...   \n","13995        399       2000        0       0       0         0         0   \n","13996        399       2001        0       0       0         0         0   \n","13997        399       2002        0       0       0         0         0   \n","13998        399       2003        0       0       0         0         0   \n","13999        399       2004        0       1       0         0         0   \n","\n","       bni_mcd  bni_aw  bni_bk  ...  bnj_wend  ai_mcd  ai_aw  ai_bk  ai_harv  \\\n","0            0       0       0  ...         0       1      1      1        1   \n","1            0       0       0  ...         0       1      1      1        1   \n","2            0       0       0  ...         0       1      1      1        1   \n","3            0       0       0  ...         0       1      1      1        1   \n","4            0       0       0  ...         0       1      1      1        1   \n","...        ...     ...     ...  ...       ...     ...    ...    ...      ...   \n","13995        0       0       0  ...         0       1      1      1        1   \n","13996        0       0       0  ...         0       1      1      1        1   \n","13997        0       0       0  ...         0       1      1      1        1   \n","13998        0       0       0  ...         0       1      1      1        1   \n","13999        0       0       0  ...         0       1      2      1        1   \n","\n","       ai_wend  fs1  bs1  fs2  bs2  \n","0            1    2    2    2    2  \n","1            1    2    2    2    2  \n","2            1    3    2    2    2  \n","3            1    3    3    2    2  \n","4            1    3    3    2    2  \n","...        ...  ...  ...  ...  ...  \n","13995        1    0    0    3    3  \n","13996        1    1    0    3    3  \n","13997        1    1    1    3    3  \n","13998        1    1    1    3    3  \n","13999        1    1    1    3    3  \n","\n","[14000 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-4c89c62d-783a-4ac7-96ab-31b9f3434ad3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sample_id</th>\n","      <th>time_year</th>\n","      <th>fni_mcd</th>\n","      <th>fni_aw</th>\n","      <th>fni_bk</th>\n","      <th>fni_harv</th>\n","      <th>fni_wend</th>\n","      <th>bni_mcd</th>\n","      <th>bni_aw</th>\n","      <th>bni_bk</th>\n","      <th>...</th>\n","      <th>bnj_wend</th>\n","      <th>ai_mcd</th>\n","      <th>ai_aw</th>\n","      <th>ai_bk</th>\n","      <th>ai_harv</th>\n","      <th>ai_wend</th>\n","      <th>fs1</th>\n","      <th>bs1</th>\n","      <th>fs2</th>\n","      <th>bs2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1970</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1971</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1972</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1973</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1974</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13995</th>\n","      <td>399</td>\n","      <td>2000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>13996</th>\n","      <td>399</td>\n","      <td>2001</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>13997</th>\n","      <td>399</td>\n","      <td>2002</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>13998</th>\n","      <td>399</td>\n","      <td>2003</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>13999</th>\n","      <td>399</td>\n","      <td>2004</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14000 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c89c62d-783a-4ac7-96ab-31b9f3434ad3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4c89c62d-783a-4ac7-96ab-31b9f3434ad3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4c89c62d-783a-4ac7-96ab-31b9f3434ad3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["#dataFull.to_csv('dataFull.csv')\n","dataFull"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1652880552454,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"},"user_tz":300},"id":"SP_pOJuA23DZ","outputId":"5f4be539-fbed-4adb-a6dd-47f6848a1cd0"},"outputs":[{"output_type":"stream","name":"stdout","text":["(36, 400) (36, 400) (35, 400)\n"]}],"source":["data_sp = 400\n","data_tm = 35\n","def GenerateOS(bni,fni,bnj,fnj,bs1=bs1,fs1=fs1,data_sp=data_sp,data_tm=data_tm):\n","  data_osb = bni * 16 + bnj*4 + bs1\n","  data_osb = data_osb.reshape([data_sp,data_tm]).T\n","  data_osf = fni * 16 + fnj*4 + fs1\n","  data_osf = data_osf.reshape([data_sp,data_tm]).T\n","  data_os = np.vstack([data_osb,data_osf[-1,:]])\n","  return data_os\n","data_os_mcd = GenerateOS(bni_mcd,fni_mcd,bnj_mcd,fnj_mcd)\n","data_os_aw = GenerateOS(bni_aw,fni_aw,bnj_aw,fnj_aw)\n","data_os_bk = GenerateOS(bni_bk,fni_bk,bnj_bk,fnj_bk)\n","data_os_harv = GenerateOS(bni_harv,fni_harv,bnj_harv,fnj_harv)\n","data_os_wend = GenerateOS(bni_wend,fni_wend,bnj_wend,fnj_wend)\n","\n","data_zb = bs2\n","data_zb = data_zb.reshape([data_sp,data_tm]).T\n","data_zf = fs2\n","data_zf = data_zf.reshape([data_sp,data_tm]).T\n","data_z = np.vstack([data_zb,data_zf[-1,:]])\n","\n","data_ai_mcd = ai_mcd.reshape([data_sp,data_tm]).T\n","data_ai_aw = ai_aw.reshape([data_sp,data_tm]).T\n","data_ai_bk = ai_bk.reshape([data_sp,data_tm]).T\n","data_ai_harv = ai_harv.reshape([data_sp,data_tm]).T\n","data_ai_wend = ai_wend.reshape([data_sp,data_tm]).T\n","\n","print(data_os_mcd.shape,data_z.shape,data_ai_mcd.shape)"]},{"cell_type":"code","source":["data_os = [data_os_mcd[0:-1],data_os_aw[0:-1],data_os_bk[0:-1],data_os_harv[0:-1],data_os_wend[0:-1]]\n","data_bz=data_z[0:-1]\n","data_ai = [data_ai_mcd,data_ai_aw,data_ai_bk,data_ai_harv,data_ai_wend]"],"metadata":{"id":"6LYboNvZ1FhY","executionInfo":{"status":"ok","timestamp":1652880552455,"user_tz":300,"elapsed":7,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["mtype = np.kron(mtype_prob,np.ones([35,1])) # sample path * time "],"metadata":{"id":"32qNM-IHRTt-","executionInfo":{"status":"ok","timestamp":1652880552455,"user_tz":300,"elapsed":7,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["#3. Recover Process (Complete Initial Verison)"],"metadata":{"id":"aJjHO7_6hNZj"}},{"cell_type":"code","execution_count":13,"metadata":{"id":"Ir8S4K8uiSB2","executionInfo":{"status":"ok","timestamp":1652880552642,"user_tz":300,"elapsed":193,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"bf6b6c69-b3b7-403b-f797-331be743cd96"},"outputs":[{"output_type":"stream","name":"stdout","text":["[4.272, -0.594, -3.801, -0.356, -0.237, 0.004, -0.03, 33.976, 3.109, -0.754, -1.377, -2, -0.241, -0.088, -0.171, 13.114]\n"]}],"source":["print(theta1)"]},{"cell_type":"code","source":["def DynamicSo(tran1=tran1): # a1*3+a2, n1*16+n2*4+pop\n","  obser_ni = np.zeros([dim_action,dim_observe,dim_observe]) #ai, ni, ni'\n","  #obser_nj = np.zeros([dim_action,dim_observe,dim_observe]) #a2, n2, n2'\n","  obser_pop = np.zeros([dim_observe,dim_observe]) #pop, pop'\n","  for a, z, z_prime in itertools.product(range(dim_action),range(dim_observe),range(dim_observe)):\n","    if z_prime == z + a-1:\n","      obser_ni[a,z,z_prime] = 1\n","    elif z+a-1> dim_observe-1:\n","      obser_ni[a,z,-1] = 1\n","    elif z+a-1<0:\n","      obser_ni[a,z,0]  = 1\n","  obser_pop = tran1/np.sum(tran1,axis=1).reshape([dim_obser,1]).dot(np.ones([1,dim_obser]))\n","  obser_ni_final = obser_ni[:,ni_old,:][:,:,ni_old] #a, so, so'\n","  obser_pop_final = np.stack([obser_pop for i in range(dim_action)],axis=0)#print(obser_pop[0])\n","  obser_pop_final = obser_pop_final[:,pop_old,:][:,:,pop_old]\n","  return obser_pop_final*obser_ni_final,[obser_pop,obser_ni]#,obser_nj]\n","obserSo, [obser_pop,obser_ni] = DynamicSo() # ai, ni_old *16 + nj_old *4 + pop_old,ni_new *16 + nj_new *4 + pop_new \n","def RewardCom(theta1,mtype,ni_old = ni_old,nj_old=nj_old,pop_old=pop_old): #2, 4*4*4, 3\n","    rw_mcd = np.zeros([dim_ostate,dim_observe,dim_action])#st,z,a_{t,1}\n","    rw_other = np.zeros([dim_ostate,dim_observe,dim_action])#st,z,a_{t,2}\n","    if mtype == 0: #low\n","\n","      for ai in range(dim_action):\n","        for z in range(dim_observe):\n","          rw_mcd[:,z,ai] = ni_old * theta1[2] + ni_old *ni_old * theta1[3] + ni_old*nj_old * theta1[4]+ni_old*pop_old * theta1[5]  +ni_old*z * theta1[6] - (ai==2) *theta1[7]  \n","          rw_other[:,z,ai] = ni_old * theta1[10] + ni_old *ni_old * theta1[11] + ni_old*nj_old * theta1[12]+ni_old*pop_old * theta1[13] +ni_old*z * theta1[14] - (ai==2) *theta1[15]      \n","    elif mtype==1:#medium\n","      for ai in range(dim_action):\n","        for z in range(dim_observe):\n","          rw_mcd[:,z,ai] = ni_old * theta1[1] + ni_old *ni_old * theta1[3] + ni_old*nj_old * theta1[4]+ni_old*pop_old * theta1[5]  +ni_old*z * theta1[6] - (ai==2) *theta1[7]  \n","          rw_other[:,z,ai] = ni_old * theta1[9] + ni_old *ni_old * theta1[11] + ni_old*nj_old * theta1[12]+ni_old*pop_old * theta1[13] +ni_old*z * theta1[14] - (ai==2) *theta1[15]       \n","    elif mtype==2:#high\n","      for ai in range(dim_action):\n","        for z in range(dim_observe):\n","          rw_mcd[:,z,ai] = ni_old * theta1[0] + ni_old *ni_old * theta1[3] + ni_old*nj_old * theta1[4]+ni_old*pop_old * theta1[5]  +ni_old*z * theta1[6] - (ai==2) *theta1[7]  \n","          rw_other[:,z,ai] = ni_old * theta1[8] + ni_old *ni_old * theta1[11] + ni_old*nj_old * theta1[12]+ni_old*pop_old * theta1[13] +ni_old*z * theta1[14] - (ai==2) *theta1[15]                                                   \n","    return rw_mcd,rw_other\n","#print(RewardCom(theta1))#[0].shape)\n","rw_mcd_low,rw_other_low = RewardCom(theta1,0)\n","rw_mcd_mid,rw_other_mid = RewardCom(theta1,1)\n","rw_mcd_high,rw_other_high = RewardCom(theta1,2)\n","\n","def DynamicCom(tran2=tran2):\n","  trans = tran2/np.sum(tran2,axis=1).reshape([dim_obser,1]).dot(np.ones([1,dim_obser]))\n","  return trans\n","trans = DynamicCom()\n"],"metadata":{"id":"kqXSEH3shUbb","executionInfo":{"status":"ok","timestamp":1652880552642,"user_tz":300,"elapsed":3,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["#  for ni = 0:3\n","#         for z1 = 0:3\n","def GeneratePnj(pi_mcd,pi_other,ni=ni_old,z1=pop_old):\n","  #ni = ni_old\n","  #z1 = pop_old\n","  fnj_mcd_temp = np.zeros([dim_ostate,dim_obser,dim_obser]) # ni_mcd_old *16 + nj_mcd_old *4 + pop_old , income_old, nj_mcd_new\n","  fnj_other_temp = np.zeros([dim_ostate,dim_obser,dim_obser]) # ni_mcd_old *16 + nj_mcd_old *4 + pop_old , income_old, nj_mcd_new\n","\n","  for z2 in range(dim_obser):\n","      \n","      nj = 0         # If today's # of rivals = 0\n","      x =  (4*4)*ni+ 4*nj + z1  # index of today's own state\n","      x0 = (4*4)*0 + 4*ni + z1  # index of today's state for rivals with 0 shops\n","      fnj_mcd_temp[x,z2,0] =   pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 0) from McD's perspective\n","      fnj_mcd_temp[x,z2,1] = 4*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 1) from McD's perspective\n","      fnj_mcd_temp[x,z2,2] = 6*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 2) from McD's perspective\n","      fnj_mcd_temp[x,z2,3] = 4*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]   # Prob(Nj'= 3) from McD's perspective \n","      fnj_other_temp[x,z2,0] =  pi_mcd[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]    # Prob(Nj'= 0) from Others' perspectives\n","      fnj_other_temp[x,z2,1] =  pi_mcd[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          3*pi_mcd[x0,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]    # Prob(Nj'= 1) from Others's perspective\n","      fnj_other_temp[x,z2,2] =3*pi_mcd[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          3*pi_mcd[x0,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]    # Prob(Nj'= 2) from Others's perspective\n","      fnj_other_temp[x,z2,3] =3*pi_mcd[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1] +\\\n","                            pi_mcd[x0,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,2]    # Prob(Nj'= 3) from Others's perspective\n","      \n","      nj = 1         # If today's # of rivals = 1\n","      x =  (4*4)*ni+ 4*nj + z1  # index of today's own state\n","      x0 = (4*4)*0 + 4*ni + z1  # index of today's state for rivals with 0 shops\n","      x1 = (4*4)*1 + 4*ni + z1  # index of today's state for rivals with 1 shops\n","      fnj_mcd_temp[x,z2,0] =   pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 0) from McD's perspective\n","      fnj_mcd_temp[x,z2,1] =   pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 1) from McD's perspective\n","      fnj_mcd_temp[x,z2,2] =   pi_other[x1,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                        3*pi_other[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 2) from McD's perspective\n","      fnj_mcd_temp[x,z2,3] = 3*pi_other[x1,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                        3*pi_other[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]   # Prob(Nj'= 3) from McD's perspective\n","      fnj_other_temp[x,z2,0] =0.5*pi_mcd[x0,z2,1]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*pi_mcd[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]    # Prob(Nj'= 0) from Others' perspectives\n","      fnj_other_temp[x,z2,1] =0.5*pi_mcd[x0,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*pi_mcd[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]    # Prob(Nj'= 1) from Others's perspective\n","      fnj_other_temp[x,z2,2] =0.5  *pi_mcd[x0,z2,2]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x0,z2,1]*pi_other[x1,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*2*pi_mcd[x0,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x1,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*3*pi_mcd[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]  # Prob(Nj'= 2) from Others's perspective\n","      fnj_other_temp[x,z2,3] =0.5  *pi_mcd[x0,z2,2]*pi_other[x1,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*2*pi_mcd[x0,z2,2]*pi_other[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1] +\\\n","                          0.5*2*pi_mcd[x0,z2,1]*pi_other[x1,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x0,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,2] +\\\n","                          0.5*3*pi_mcd[x1,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*3*pi_mcd[x1,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,2]*pi_other[x0,z2,1]  # Prob(Nj'= 3) from Others's perspective\n","\n","      nj = 2         # If today's # of rivals = 2\n","      x =  (4*4)*ni+ 4*nj + z1  # index of today's own state\n","      x0 = (4*4)*0 + 4*ni + z1  # index of today's state for rivals with 0 shops\n","      x1 = (4*4)*1 + 4*ni + z1  # index of today's state for rivals with 1 shops\n","      x2 = (4*4)*2 + 4*ni + z1  # index of today's state for rivals with 2 shops\n","      fnj_mcd_temp[x,z2,0] =   pi_other[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]      # Prob(Nj'= 0) from McD's perspective\n","      fnj_mcd_temp[x,z2,1] =(2/3)*pi_other[x1,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                        (1/3)*pi_other[x2,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 1) from McD's perspective\n","      fnj_mcd_temp[x,z2,2] =(2/3)*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                        (1/3)*pi_other[x2,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 2) from McD's perspective\n","      fnj_mcd_temp[x,z2,3] =(1/3)*pi_other[x2,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                        (1/3)*3*pi_other[x2,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] # Prob(Nj'= 3) from McD's perspective\n","      fnj_other_temp[x,z2,0] =0.5*pi_mcd[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]     # Prob(Nj'= 0) from Others' perspectives\n","      fnj_other_temp[x,z2,1] =0.5*pi_mcd[x2,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*(pi_mcd[x1,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                              pi_mcd[x1,z2,1]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1])   # Prob(Nj'= 1) from Others's perspective\n","      fnj_other_temp[x,z2,2] =0.5  *pi_mcd[x2,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 2) from Others's perspective\n","      fnj_other_temp[x,z2,3] =0.5  *pi_mcd[x2,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*3*pi_mcd[x2,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x1,z2,2]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5  *pi_mcd[x1,z2,1]*pi_other[x1,z2,2]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.5*2*pi_mcd[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,2]*pi_other[x0,z2,1]   # Prob(Nj'= 3) from Others's perspective\n","\n","      nj = 3         # If today's # of rivals = 3\n","      x =  (4*4)*ni+ 4*nj + z1  # index of today's own state\n","      x0 = (4*4)*0 + 4*ni + z1  # index of today's state for rivals with 0 shops\n","      x1 = (4*4)*1 + 4*ni + z1  # index of today's state for rivals with 1 shops\n","      x2 = (4*4)*2 + 4*ni + z1  # index of today's state for rivals with 2 shops\n","      x3 = (4*4)*3 + 4*ni + z1  # index of today's state for rivals with 3 shops\n","      fnj_mcd_temp[x,z2,0] =(2/3)*pi_other[x0,z2,1]*pi_other[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x1,z2,0]   # Prob(Nj'= 0) from McD's perspective\n","      fnj_mcd_temp[x,z2,1] =(2/3)*pi_other[x1,z2,1]*pi_other[x1,z2,0]*pi_other[x1,z2,0]+\\\n","                        (1/3)*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x1,z2,0]*pi_other[x2,z2,0]   # Prob(Nj'= 1) from McD's perspective\n","      fnj_mcd_temp[x,z2,2] =(2/3)*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x1,z2,0]+\\\n","                        (1/3)*(pi_other[x2,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]+\\\n","                              pi_other[x2,z2,1]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]) # Prob(Nj'= 2) from McD's perspective\n","      fnj_mcd_temp[x,z2,3] =(2/3)*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]+\\\n","                        (1/3)*pi_other[x2,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 3) from McD's perspective\n","      fnj_other_temp[x,z2,0] =0.25*pi_mcd[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x0,z2,1]     # Prob(Nj'= 0) from Others' perspectives\n","      fnj_other_temp[x,z2,1] =0.25*pi_mcd[x2,z2,0]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25*(2*pi_mcd[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1]+\\\n","                              pi_mcd[x1,z2,1]*pi_other[x1,z2,0]*pi_other[x1,z2,0]*pi_other[x0,z2,1])+\\\n","                          0.25*pi_mcd[x1,z2,0]*pi_other[x2,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]     # Prob(Nj'= 1) from Others's perspective\n","      fnj_other_temp[x,z2,2] =0.25  *pi_mcd[x3,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x2,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x2,z2,1]*pi_other[x1,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x1,z2,0]*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25*2*pi_mcd[x1,z2,1]*pi_other[x1,z2,0]*pi_other[x1,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x1,z2,0]*pi_other[x2,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x1,z2,1]*pi_other[x2,z2,0]*pi_other[x0,z2,1]*pi_other[x0,z2,1]   # Prob(Nj'= 2) from Others's perspective\n","      fnj_other_temp[x,z2,3] =0.25  *pi_mcd[x3,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x2,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x0,z2,1] +\\\n","                          0.25  *pi_mcd[x0,z2,1]*pi_other[x1,z2,1]*pi_other[x1,z2,1]*pi_other[x1,z2,1]   # Prob(Nj'= 3) from Others's perspective\n","      \n","\n","  Denom_mcd = np.stack([np.sum(fnj_mcd_temp,2) for i in range(dim_observe)],axis=2) #Sum of each row\n","  fnj_mcd_temp = fnj_mcd_temp / Denom_mcd#;                 % Make sure each row sums up to 1\n","  fnj_mcd_temp[np.isnan(fnj_mcd_temp)] = 0#;                    % Replace NaN with 0\n","  # F_Nj(1,j,:,:,mtype) = ...\n","  #     [fnj_mcd(:,1) * ones(1,16), fnj_mcd(:,2) * ones(1,16), fnj_mcd(:,3) * ones(1,16), fnj_mcd(:,4) * ones(1,16),...\n","  #       fnj_mcd(:,1) * ones(1,16), fnj_mcd(:,2) * ones(1,16), fnj_mcd(:,3) * ones(1,16), fnj_mcd(:,4) * ones(1,16),...\n","  #       fnj_mcd(:,1) * ones(1,16), fnj_mcd(:,2) * ones(1,16), fnj_mcd(:,3) * ones(1,16), fnj_mcd(:,4) * ones(1,16),...\n","  #       fnj_mcd(:,1) * ones(1,16), fnj_mcd(:,2) * ones(1,16), fnj_mcd(:,3) * ones(1,16), fnj_mcd(:,4) * ones(1,16)];\n","\n","  Denom_other = np.stack([np.sum(fnj_other_temp,2) for i in range(dim_observe)],axis=2)# % Sum of each row\n","  fnj_other_temp = fnj_other_temp / Denom_other#;                   % Make sure each row sums up to 1\n","  fnj_other_temp[np.isnan(fnj_other_temp)] = 0#;                        % Replace NaN with 0\n","  # F_Nj(2,j,:,:,mtype) = ...\n","  #     [fnj_other(:,1) * ones(1,16), fnj_other(:,2) * ones(1,16), fnj_other(:,3) * ones(1,16), fnj_other(:,4) * ones(1,16),...\n","  #       fnj_other(:,1) * ones(1,16), fnj_other(:,2) * ones(1,16), fnj_other(:,3) * ones(1,16), fnj_other(:,4) * ones(1,16),...\n","  #       fnj_other(:,1) * ones(1,16), fnj_other(:,2) * ones(1,16), fnj_other(:,3) * ones(1,16), fnj_other(:,4) * ones(1,16),...\n","  #       fnj_other(:,1) * ones(1,16), fnj_other(:,2) * ones(1,16), fnj_other(:,3) * ones(1,16), fnj_other(:,4) * ones(1,16)];\n","  # F_Nj(3:5,j,:,:,mtype) = repmat(F_Nj(2,j,:,:,mtype), [3, 1, 1, 1, 1]);    % Other 4 chains are symmetric\n","  return fnj_mcd_temp[:,:,nj_old],fnj_other_temp[:,:,nj_old]"],"metadata":{"id":"FhtkY6IPLTRs","executionInfo":{"status":"ok","timestamp":1652880553129,"user_tz":300,"elapsed":490,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from scipy.special import logsumexp\n","from scipy.special import softmax\n","\n","def ValueIterationCom(theta1,trans,obserSo, beta = 0.9, #xt,a_t,z_t,z_{t+1}\n","                   gamma = 0.5772,thread_inner = 1e-3,thread_outer = 1e-2): #xt,z, a1 or xt,z, a2\n","  Q1_new_final = np.zeros([3,dim_ostate,dim_observe,dim_action])\n","  Q2_new_final = np.zeros([3,dim_ostate,dim_observe,dim_action])\n","  pi1_new_final = np.zeros([3,dim_ostate,dim_observe,dim_action])\n","  pi2_new_final = np.zeros([3,dim_ostate,dim_observe,dim_action])\n","  for mtype in range(3):\n","    rw1_belief,rw2_belief = RewardCom(theta1,mtype)#, Reward(theta1,2) #st,z,a_{t,1}\n","\n","    pi1_new = 1/dim_action*np.ones([dim_ostate,dim_observe,dim_action]) #xt,za,a1\n","    pi2_old = pi1_new.copy()\n","\n","    a_old = np.arange(dim_action,dtype=int)\n","\n","    Q1_new = np.zeros([dim_ostate,dim_observe,dim_action]) #xt,za,a1#rw1_belief#\n","    Q2_new = np.zeros([dim_ostate,dim_observe,dim_action]) #xt,za,a2#rw2_belief#\n","\n","    for ol in range(1000):\n","      pi1_old = pi1_new.copy()\n","\n","      # Q1_new = np.zeros([dim_statefull,dim_action]) #xt,za,a1#rw1_belief#\n","      # Q2_new = np.zeros([dim_statefull,dim_action]) #xt,za,a2#rw2_belief#\n","      for il in range(1000):\n","        Q2_old = Q2_new.copy() #xt,za,a2\n","        #a_belief = a_old * dim_action + a2\n","        V2 = gamma + logsumexp(Q2_old,axis=2) #so_new,z_new\n","        V2 = np.kron(np.ones([dim_ostate,dim_observe,1,1]),V2.reshape([1,1,dim_ostate,dim_observe])) #so_old,z_old,so_new,z_new\n","        _,fnj_other_temp = GeneratePnj(pi1_old,softmax(Q2_old,axis=2)) # so_old,z_old, so_new\n","        \n","        for a2 in range(dim_action):\n","          V2_temp = np.zeros([dim_ostate,dim_observe,dim_ostate,dim_observe])\n","          for zt,zt1 in itertools.product(range(dim_observe),range(dim_observe)):\n","            V2_temp[:,zt,:,zt1] = trans[zt,zt1] * V2[:,zt,:,zt1] * obserSo[a2,:,:] * fnj_other_temp[:,zt,:] #so_old,so_new\n","          V2_temp = np.sum(np.sum(V2_temp,axis=3),axis=2) # so_old,z_old \n","          Q2_new[:,:,a2] = rw2_belief[:,:,a2] + beta * V2_temp #x_old.dot(rw2[0,:,a2].reshape([1,-1])) + (1-x_old).dot(rw2[1,:,a2].reshape([1,-1])) \n","        \n","        if ol==0 and il==0:\n","          error_in2 = 1\n","        else:\n","          error_in2 = np.max(np.abs(np.nan_to_num((Q2_new-Q2_old)/Q2_old)))\n","        #print('Q2',il,error_in2,np.max(np.abs(Q2_old)))\n","        if  error_in2<thread_inner: \n","          #print('Q2',il,error_in2,np.max(np.abs(Q2_old)))\n","          break\n","\n","      pi2_new = softmax(Q2_new,axis=2)   \n","      error_ot2 = np.max(np.abs(np.nan_to_num((pi2_old-pi2_new)/pi2_old)))\n","\n","\n","      pi2_old = pi2_new.copy()\n","      for il in range(1000):\n","        Q1_old = Q1_new.copy() #xt,za,a2\n","        #a_belief = a1 * dim_action + a_old\n","        V1 = gamma + logsumexp(Q1_old,axis=2)\n","        V1 = np.kron(np.ones([dim_ostate,dim_observe,1,1]),V1.reshape([1,1,dim_ostate,dim_observe]))\n","        fnj_mcd_temp,_ = GeneratePnj(softmax(Q1_old,axis=2),pi2_old) # so_old,z_old, so_new\n","\n","        for a1 in range(dim_action):\n","          V1_temp = np.zeros([dim_ostate,dim_observe,dim_ostate,dim_observe])\n","          for zt,zt1 in itertools.product(range(dim_observe),range(dim_observe)):\n","            V1_temp[:,zt,:,zt1] = trans[zt,zt1] * V1[:,zt,:,zt1] * obserSo[a1,:,:]*fnj_mcd_temp[:,zt,:]  #so_old,so_new\n","\n","          V1_temp = np.sum(np.sum(V1_temp,axis=3),axis=2) #[x_old,a1,z_old]\n","          Q1_new[:,:,a1] = rw1_belief[:,:,a1] + beta * V1_temp #x_old.dot(rw2[0,:,a2].reshape([1,-1])) + (1-x_old).dot(rw2[1,:,a2].reshape([1,-1])) \n","        if ol==0 and il==0:\n","          error_in1 =1\n","        else:\n","          error_in1 = np.max(np.abs(np.nan_to_num((Q1_new-Q1_old)/Q1_old)))\n","        #print('Q1',il,error_in1,np.max(np.abs(Q1_old)))\n","        if  error_in1<thread_inner: \n","          #print('Q1',il,error_in1,np.max(np.abs(Q1_old)))\n","          break\n","\n","      pi1_new = softmax(Q1_new,axis=2)   \n","      error_ot1 = np.max(np.abs(np.nan_to_num((pi1_old-pi1_new)/pi1_old)))\n","\n","      #print(ol,error_ot1,error_ot2)\n","      if error_ot1 <thread_outer and error_ot2<thread_outer:\n","        #print(ol,error_ot1,error_ot2)\n","        break\n","    Q1_new_final[mtype] = Q1_new.copy()\n","    Q2_new_final[mtype] = Q2_new.copy()\n","    pi1_new_final[mtype] = pi1_new.copy()\n","    pi2_new_final[mtype] = pi2_new.copy()\n","  return Q1_new_final,Q2_new_final,pi1_new_final,pi2_new_final\n","\n","\n","import time\n","start = time.time()\n","Q1,Q2,pi1,pi2 = ValueIterationCom(theta1,trans,obserSo)\n","print(time.time()-start)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_dqpwP9hLIwU","executionInfo":{"status":"ok","timestamp":1652880558444,"user_tz":300,"elapsed":5318,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}},"outputId":"21b61838-7c5d-4cfb-fb8e-9eee549c0f1d"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["5.167018413543701\n"]}]},{"cell_type":"code","source":["mtype_prob.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NUmvUc3fZtTQ","executionInfo":{"status":"ok","timestamp":1652880558444,"user_tz":300,"elapsed":10,"user":{"displayName":"Lu Sun","userId":"12220989488268625125"}},"outputId":"b4649d89-99dc-44c5-eadc-100e0ed3ffb8"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(400, 3)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PEOARlvcor0R","colab":{"base_uri":"https://localhost:8080/"},"outputId":"8ae5bdff-62b8-4ff7-f8e6-f681d09c8d8c"},"outputs":[{"output_type":"stream","name":"stdout","text":["start from: [ 0. -0. -0. -0. -0.  0. -0.  0.  0. -0. -0. -0. -0. -0. -0.  0.]\n","[ 0. -0. -0. -0. -0.  0. -0.  0.  0. -0. -0. -0. -0. -0. -0.  0.] 76902.8602067677\n","[ 0. -0. -0. -0. -0.  0. -0.  0.  0. -0. -0. -0. -0. -0. -0.  0.] 76902.8602067677\n","[1.49011612e-08 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86021766491\n","[0.00000000e+00 1.49011612e-08 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86020959925\n","[0.00000000e+00 0.00000000e+00 1.49011612e-08 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86032175891\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 1.49011612e-08\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86054229783\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 1.49011612e-08 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.8604428485\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 1.49011612e-08 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86040465272\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 1.49011612e-08 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86040703999\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.49011612e-08\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86014262315\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 1.49011612e-08 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86028283695\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 1.49011612e-08 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86022391474\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 1.49011612e-08 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86084042523\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.49011612e-08\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86184320752\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 1.49011612e-08 0.00000000e+00 0.00000000e+00 0.00000000e+00] 76902.86169042219\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 1.49011612e-08 0.00000000e+00 0.00000000e+00] 76902.86136682557\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 1.49011612e-08 0.00000000e+00] 76902.86142620073\n","[0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00\n"," 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.49011612e-08] 76902.8599359738\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78868095196\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78868095196\n","[-0.00378446 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78867629787\n","[-0.00378448 -0.00098335 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.7886802315\n","[-0.00378448 -0.00098337 -0.03993509 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78866521388\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652569 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78864099766\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.0819881  -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78867801071\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872315\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78863273613\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955222  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78862087871\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227667 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78865039154\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641795 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78866454963\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595496 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78867827101\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006187 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78863727243\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.56831648\n"," -0.51525593 -0.40287459 -0.42349489  0.09404357] 71524.78860507513\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525591 -0.40287459 -0.42349489  0.09404357] 71524.78864233757\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287458 -0.42349489  0.09404357] 71524.78857087382\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349488  0.09404357] 71524.78855039879\n","[-0.00378448 -0.00098337 -0.03993511 -0.11652571 -0.08198811 -0.06872316\n"," -0.06955224  0.02227666 -0.02641797 -0.00595497 -0.22006188 -0.5683165\n"," -0.51525593 -0.40287459 -0.42349489  0.09404358] 71524.78865741949\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488420025\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488420025\n","[ 8.89974917e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488276504\n","[ 8.88484801e-06 -4.38901193e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488402112\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261394e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488388967\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29982961e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43487713899\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81510963e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488450586\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986173e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.4348690721\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153722e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43486135581\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536429e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.4348480823\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44557862e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.4348682553\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17580424e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43488162203\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307316e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43484276929\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956860e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43481114118\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819716e-01 -3.46855177e-01 -3.51214128e-01  1.25395961e-01] 70078.43484168113\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855162e-01 -3.51214128e-01  1.25395961e-01] 70078.43477920537\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214114e-01  1.25395961e-01] 70078.43475938585\n","[ 8.88484801e-06 -4.38916094e-04 -3.00261543e-02 -9.29983110e-02\n"," -8.81511112e-02 -3.25986322e-02 -2.28153871e-02  5.22536280e-02\n"," -1.44558011e-02 -4.17581914e-03 -2.04307331e-01 -5.60956874e-01\n"," -5.35819731e-01 -3.46855177e-01 -3.51214128e-01  1.25395976e-01] 70078.43485812639\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91130233114\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91130233114\n","[ 4.52288316e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91130773988\n","[ 4.52286826e-03  1.05658389e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.9113031486\n","[ 4.52286826e-03  1.05643488e-04 -2.75066208e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91133091718\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381020e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91137366886\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937402e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91131065684\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49280404e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91135904238\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881591e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91136200925\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022373e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91125866948\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863204e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.9112877557\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.36965460e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91130005346\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254657e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91126821048\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409011e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91123830772\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323277e-01 -2.16528255e-01 -1.83304875e-01  2.01195505e-01] 67543.91125646273\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528241e-01 -1.83304875e-01  2.01195505e-01] 67543.91121339102\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304861e-01  2.01195505e-01] 67543.91119519637\n","[ 4.52286826e-03  1.05643488e-04 -2.75066357e-02 -8.15381169e-02\n"," -1.05937417e-01  7.49278914e-03  3.64881442e-02  1.30022359e-01\n","  1.33863055e-02 -5.37114472e-05 -1.67254672e-01 -5.39409026e-01\n"," -5.71323292e-01 -2.16528255e-01 -1.83304875e-01  2.01195520e-01] 67543.91126842052\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63781805601\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63781805601\n","[ 8.71465691e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63782100921\n","[ 8.71464201e-03  5.69417427e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63781830156\n","[ 8.71464201e-03  5.69402526e-04 -4.19350230e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63782737238\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498422e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63784621612\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046597e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.637824802456\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738501e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.637841913864\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61824026e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.6378431566\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610786e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.6377810219\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13033132e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63780913373\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48585649e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63781683049\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631749e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63781455322\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862682e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.637792442074\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271249e-01  5.25872377e-02  1.63925946e-01  3.65419742e-01] 63704.63780091803\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872526e-02  1.63925946e-01  3.65419742e-01] 63704.63779887279\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925961e-01  3.65419742e-01] 63704.63778698473\n","[ 8.71464201e-03  5.69402526e-04 -4.19350379e-02 -1.20498437e-01\n"," -1.48046612e-01  3.61738352e-02  9.61823877e-02  2.96610771e-01\n","  7.13032983e-02  8.48584159e-03 -9.06631898e-02 -4.87862696e-01\n"," -6.32271264e-01  5.25872377e-02  1.63925946e-01  3.65419757e-01] 63704.63775608047\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11403165103\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11403165103\n","[ 0.0114665   0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11402625727\n","[ 0.01146649  0.00118429 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11403067602\n","[ 0.01146649  0.00118428 -0.04816971 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11400148984\n","[ 0.01146649  0.00118428 -0.04816972 -0.14639599 -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11396700515\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.18784379  0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11398777379\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.0643931\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11395694372\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149189  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11394752479\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106898  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.114005124145\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.12661351  0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11403492335\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644696 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11403219556\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771823 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.11408985725\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288364\n"," -0.67735314  0.26363516  0.45002841  0.58501087] 63490.114101931445\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735313  0.26363516  0.45002841  0.58501087] 63490.1141356581\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363517  0.45002841  0.58501087] 63490.11417293714\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002842  0.58501087] 63490.1141753643\n","[ 0.01146649  0.00118428 -0.04816972 -0.146396   -0.1878438   0.06439309\n","  0.15149187  0.47106897  0.1266135   0.01644694 -0.03771825 -0.43288366\n"," -0.67735314  0.26363516  0.45002841  0.58501088] 63490.1139403078\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747883034\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747883034\n","[ 0.0098776   0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.297479444795\n","[ 0.00987758  0.00082927 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747871631\n","[ 0.00987758  0.00082925 -0.04456982 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.297476206266\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144282 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.297478727414\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486502  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747838108\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.0480994\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747474738\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955637  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.2974732866\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033739  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.297445379154\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467758  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747331131\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185024 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747813698\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828847 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.297492562706\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462836\n"," -0.65132301  0.14177677  0.28483378  0.45821967] 63023.29747678426\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.651323    0.14177677  0.28483378  0.45821967] 63023.29748997699\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177679  0.28483378  0.45821967] 63023.29750243074\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483379  0.45821967] 63023.29749457301\n","[ 0.00987758  0.00082925 -0.04456984 -0.13144283 -0.16486503  0.04809938\n","  0.11955636  0.37033737  0.09467757  0.01185023 -0.06828849 -0.46462838\n"," -0.65132301  0.14177677  0.28483378  0.45821968] 63023.2974058495\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668740198\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668740198\n","[ 0.01075628  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.5866876757\n","[ 0.01075627  0.00126292 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668731447\n","[ 0.01075627  0.00126291 -0.04260608 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668564694\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752553 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.586690853976\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672532  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668950668\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020825\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668550917\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547691  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668498136\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313688  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58665476715\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498837  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.5866853742\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617508 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58668716293\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.0575756  -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.586716607315\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673465\n"," -0.6761096   0.20969093  0.39390202  0.63398581] 62327.58671033975\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.67610958  0.20969093  0.39390202  0.63398581] 62327.58673239715\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969095  0.39390202  0.63398581] 62327.586753195676\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390204  0.63398581] 62327.586750300834\n","[ 0.01075627  0.00126291 -0.04260609 -0.13752555 -0.17672534  0.07020824\n","  0.15547689  0.48313686  0.12498836  0.01617507 -0.05757562 -0.42673466\n"," -0.6761096   0.20969093  0.39390202  0.63398582] 62327.5866096925\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12422088468\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12422088468\n","[ 0.01080132  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12422059519\n","[ 0.01080131  0.00181629 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12422091419\n","[ 0.01080131  0.00181627 -0.03880108 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.124225582476\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904243 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12423973455\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933986  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12423122018\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257919\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.124234249626\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272016  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.1242341244\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854517  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12418895674\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384099  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.1242218267\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180322 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12422089328\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278319 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12425691559\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693205\n"," -0.71410537  0.24140125  0.47736296  0.9184219 ] 61095.12426185854\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410535  0.24140125  0.47736296  0.9184219 ] 61095.124287827595\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140126  0.47736296  0.9184219 ] 61095.12431007959\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736297  0.9184219 ] 61095.12431337928\n","[ 0.01080131  0.00181627 -0.03880109 -0.14904245 -0.18933987  0.09257917\n","  0.19272015  0.64854515  0.16384097  0.02180321 -0.06278321 -0.36693207\n"," -0.71410537  0.24140125  0.47736296  0.91842191] 61095.12414695397\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34593648119\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34593648119\n","[ 0.01137968  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34593147602\n","[ 0.01137967  0.00270984 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34593635446\n","[ 0.01137967  0.00270982 -0.03423151 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.345945894536\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427981 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34596066895\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319259  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.345943343884\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567906\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34595769187\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804146  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34595008912\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997526  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.345908667514\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.2228085   0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.345942499196\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060273 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.345936725585\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354718 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.3459719961\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743375\n"," -0.77854283  0.24678137  0.55789579  1.40047586] 58962.34600274372\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854281  0.24678137  0.55789579  1.40047586] 58962.346011334936\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678139  0.55789579  1.40047586] 58962.346034564296\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789581  1.40047586] 58962.34605013678\n","[ 0.01137967  0.00270982 -0.03423153 -0.17427982 -0.21319261  0.11567905\n","  0.23804145  0.91997525  0.22280849  0.03060272 -0.08354719 -0.26743376\n"," -0.77854283  0.24678137  0.55789579  1.40047587] 58962.34587587002\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16405688033\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16405688033\n","[ 0.02083629  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.164067899874\n","[ 0.02083628  0.00466035 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16405369433\n","[ 0.02083628  0.00466034 -0.03137304 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16406940836\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479401 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.164177091974\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889387  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16398490338\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660216\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16402370547\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013796  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.164127319236\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.40342682  0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.164062290016\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547579  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16405805971\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555916 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16405903034\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209365 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.16409450284\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433717\n"," -0.88062142  0.1951227   0.6112029   2.27637733] 58317.164285406456\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062141  0.1951227   0.6112029   2.27637733] 58317.16395480622\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.19512271  0.6112029   2.27637733] 58317.16417863569\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.61120291  2.27637733] 58317.16415809431\n","[ 0.02083628  0.00466034 -0.03137306 -0.22479402 -0.23889388  0.13660214\n","  0.31013795  1.4034268   0.31547577  0.04555915 -0.13209367 -0.11433718\n"," -0.88062142  0.1951227   0.6112029   2.27637734] 58317.164052837354\n","[ 0.01919877  0.00522556 -0.0302547  -0.23771594 -0.22334518  0.14305168\n","  0.30042718  1.40768811  0.314917    0.04522464 -0.1421832  -0.13697242\n"," -0.85255652  0.16126194  0.57921456  2.29817125] 56258.51698049988\n","[ 0.01919877  0.00522556 -0.0302547  -0.23771594 -0.22334518  0.14305168\n","  0.30042718  1.40768811  0.314917    0.04522464 -0.1421832  -0.13697242\n"," -0.85255652  0.16126194  0.57921456  2.29817125] 56258.51698049988\n","[ 0.01919878  0.00522556 -0.0302547  -0.23771594 -0.22334518  0.14305168\n","  0.30042718  1.40768811  0.314917    0.04522464 -0.1421832  -0.13697242\n"," -0.85255652  0.16126194  0.57921456  2.29817125] 56258.51696689872\n"]}],"source":["from scipy.optimize import minimize\n","from scipy.optimize import show_options\n","ini_x0 = 0*np.array(theta1)#np.array([2.39908588, -0.47031325, -0.07545652,  0.04410493,  0.05274356,\n","       #15.03518337,  1.36915445, -0.42847477, -0.16876704,  0.03462041,\n","       # 0.0711309 ,  6.1976059])#0*np.array(theta1_com)\n","print('start from:',ini_x0 )\n","\n","def func2(theta1,data_bz=data_bz,data_os=data_os,data_ai =data_ai,obserSo=obserSo,trans=trans):\n","  _,_,pi1,pi2 = ValueIterationCom(theta1,trans,obserSo)\n","\n","  p1 = pi1[0,data_os[0],data_bz,data_ai[0]]*mtype_prob[:,0] +\\\n","       pi1[1,data_os[0],data_bz,data_ai[0]]*mtype_prob[:,1] +\\\n","       pi1[2,data_os[0],data_bz,data_ai[0]]*mtype_prob[:,2] #pi1[data_os[0],data_bz,data_ai[0]]\n","  res = - np.sum(np.log(p1[np.where(p1!=0)]))\n","  for i in range(1,5):\n","    p2 = pi2[0,data_os[i],data_bz,data_ai[i]]*mtype_prob[:,0] +\\\n","       pi2[1,data_os[i],data_bz,data_ai[i]]*mtype_prob[:,1] +\\\n","       pi2[2,data_os[i],data_bz,data_ai[i]]*mtype_prob[:,2] #pi2[data_os[i],data_bz,data_ai[i]]\n","    res = res - np.sum(np.log(p2[np.where(p2!=0)]))\n","  print(theta1,res)\n","  return res/(5*data_sp*data_tm)\n","\n","start = time.time()\n","\n","res22 = minimize(func2,ini_x0)#,tol=1e-3)\n","print(time.time()-start)\n","print(res22,res22.fun*5*data_sp*data_tm) # 28min"]}]}